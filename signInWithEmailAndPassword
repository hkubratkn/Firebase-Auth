import android.os.Bundle
import android.widget.Toast
import androidx.activity.ComponentActivity
import androidx.activity.compose.setContent
import androidx.compose.foundation.layout.*
import androidx.compose.foundation.text.KeyboardOptions
import androidx.compose.material.*
import androidx.compose.runtime.*
import com.example.exampleeee.ui.theme.ExampleeeeTheme
import androidx.compose.ui.Modifier
import androidx.compose.ui.platform.LocalContext
import androidx.compose.ui.text.input.KeyboardType
import androidx.compose.ui.text.input.PasswordVisualTransformation
import androidx.compose.ui.text.input.TextFieldValue
import androidx.compose.ui.unit.dp
import com.google.firebase.auth.ktx.auth
import com.google.firebase.ktx.Firebase

class MainActivity : ComponentActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContent {
            ExampleeeeTheme {
                Surface(
                    color = MaterialTheme.colors.background
                ){
                    SignInScreenWithEmail()
                }
            }
        }
    }
}

@Composable
fun SignInScreenWithEmail(){
    val auth = Firebase.auth
    val context = LocalContext.current
    Column(
        modifier = Modifier
            .fillMaxSize()
            .padding(8.dp)
    ){
        val emailValue = remember{ mutableStateOf(TextFieldValue())}
        val passwordValue = remember{ mutableStateOf(TextFieldValue())}
        
        OutlinedTextField(
            label = {
                Text("Email")
            },
            keyboardOptions = KeyboardOptions(keyboardType = KeyboardType.Email),
            value = emailValue,
            singleLine = true,
            modifier = Modifier.fillMaxWidth(),
            onValueChange = { 
                emailValue.value = it
            }
        )

        OutlinedTextField(
            label = {
                Text(text="password")
            },
            singleLine = true,
            visualTransformation = PasswordVisualTransformation(),
            keyboardOptions = KeyboardOptions(keyboardType = KeyboardType.Password),
            value = passwordValue,
            modifier = Modifier.fillMaxWidth(),
            onValueChange = {
                passwordValue.value = it
            }
        )
        Spacer(modifier = Modifier.padding(8.dp))
        Button(
            modifier = Modifier.fillMaxWidth(),
            onClick = {
                auth.signInWithEmailAndPassword(
                    emailValue.value.text.trim(),
                    passwordValue.value.text.trim()
                )
                    .addOnCompleteListener { task->
                        if (task.isSuccessful){
                            Toast.makeText(context, "Successful", Toast.LENGTH_LONG).show()
                        }
                    }
                    .addOnFailureListener { ex->
                        Toast.makeText(context, ex.localizedMessage, Toast.LENGTH_LONG).show()
                    }
            }
        ) {
            Text(text="Sign in")
        }
    }
}
